"use strict";(self.webpackChunkllmos_ai=self.webpackChunkllmos_ai||[]).push([[559],{4823:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=t(4848),s=t(8453);const a={sidebar_position:1,title:"LLMOS Configurations"},r=void 0,i={id:"installation/configurations",title:"LLMOS Configurations",description:"LLMOS provides a set of configuration options that can be set in the /etc/llmos/config.yaml file, create it manually if it does not exist.",source:"@site/docs/installation/configurations.md",sourceDirName:"installation",slug:"/installation/configurations",permalink:"/docs/installation/configurations",draft:!1,unlisted:!1,editUrl:"https://github.com/llmos-ai/llmos.ai/tree/main/docs/docs/installation/configurations.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"LLMOS Configurations"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/category/installation"},next:{title:"Bootstrap Options",permalink:"/docs/installation/"}},l={},c=[{value:"Example of Full Configurations",id:"example-of-full-configurations",level:3}];function d(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["LLMOS provides a set of configuration options that can be set in the ",(0,o.jsx)(n.code,{children:"/etc/llmos/config.yaml"})," file, create it manually if it does not exist."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"## e.g., minimum cluster-init node configuration\nmkdir -p /etc/llmos\ncat > /etc/llmos/config.yaml << EOF\nrole: cluster-init\ntoken: mytoken\nEOF\n"})}),"\n",(0,o.jsx)(n.h3,{id:"example-of-full-configurations",children:"Example of Full Configurations"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'########################################################\n# The below parameters apply to cluster-init role only #\n########################################################\n\n# The Kubernetes version to be installed. This is default to use the latest stable k3s version\n# if not specified.\nkubernetesVersion: v1.29.7+k3s1\n\n# The LLMOS operator version to be installed \nllmosOperatorVersion: v0.1.0\n\n# LLMOS chart repo with "latest" or "dev", default to latest\nchartRepo: latest\n\n# Values set on the LLMOS Operator Helm chart. Refer to\n# https://github.com/llmos-ai/llmos-operator/blob/main/deploy/charts/llmos-operator/values.yaml\n# for possible values.\noperatorValues:\n  # Below are the default values set\n  operator:\n      apiserver:\n        replicaCount: 1\n\n# Addition SANs (hostnames) to be added to the generated TLS certificate that\n# served on port 6443.\ntlsSans:\n- additionalhostname.example.com\n\n# Generic commands to run before bootstrapping the node.\npreInstructions:\n  - name: something\n    # This image will be extracted to a temporary folder and\n    # set as the current working dir. The command will not run\n    # contained or chrooted, this is only a way to copy assets\n    # to the host. This is parameter is optional\n    image: custom/image:1.1.1\n    # Environment variables to set\n    env:\n    - FOO=BAR\n    # Program arguments\n    args:\n    - arg1\n    - arg2\n    # Command to run\n    command: /bin/dosomething\n    # Save output to /var/lib/llmos/plan/plan-output.json\n    saveOutput: false\n\n# Generic commands to run after bootstrapping the node.\npostInstructions:\n  - name: something\n    env:\n    - FOO=BAR\n    args:\n    - arg1\n    - arg2\n    command: /bin/dosomething\n    saveOutput: false\n\n# Custom Kubernetes resources that will be created once LLMOS operator is bootstrapped\nresources:\n- kind: ConfigMap\n  apiVersion: v1\n  metadata:\n    name: random\n  data:\n    key: value\n\n# Contents of the registries.yaml that will be used by k3s/RKE2. The structure\n# is documented at https://rancher.com/docs/k3s/latest/en/installation/private-registry/\nregistries: {}\n\n# The default registry used for all llmos-operator container images. For more information\n# refer to https://github.com/llmos-ai/llmos-operator/blob/991809f8c480185bc977edd2ed7a2da54749f886/deploy/charts/llmos-operator/values.yaml#L7-L17\nglobalImageRegistry: someprefix.example.com:5000\n\n# Advanced: The system agent installer image used for Kubernetes\nruntimeInstallerImage: ...\n\n# Advanced: The system agent installer image used for LLMOS operator\nllmosInstallerImage: ...\n\n\n###########################################\n# The below parameters apply to all roles #\n###########################################\n\n# The URL for a node to join an LLMOS cluster.\nserver: https://server-url:6443\n\n# A shared secret to join nodes to the cluster\ntoken: mytoken\n\n# The role of this node.  Every cluster must start with one node as role=cluster-init.\n# After that nodes can be joined using the server role for control-plane nodes and\n# agent role for worker only nodes.  The server/agent terms correspond to the server/agent\n# terms in k3s and RKE2\nrole: cluster-init,server,agent\n# The Kubernetes node name that will be set\nnodeName: custom-hostname\n# The IP address that will be set in Kubernetes for this node\naddress: 123.123.123.123\n# The internal IP address that will be used for this node\ninternalAddress: 123.123.123.124\n# Taints to apply to this node upon creation\ntaints:\n- dedicated=special-user:NoSchedule\n# Labels to apply to this node upon creation\nlabels:\n- key=value\n\n# Advanced: Arbitrary configuration that will be placed in /etc/rancher/k3s/config.yaml.d/40-llmos.yaml\n# or /etc/rancher/rke2/config.yaml.d/40-llmos.yaml\nextraConfig: {}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(6540);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);