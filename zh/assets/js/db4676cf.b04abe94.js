"use strict";(self.webpackChunkllmos_ai=self.webpackChunkllmos_ai||[]).push([[283],{6945:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});var a=n(4848),c=n(8453);const i={sidebar_position:1,title:"Namespace"},o=void 0,t={id:"user_guide/advanced/namespace",title:"Namespace",description:"Namespaces provide a way to isolate groups of resources within a single cluster. Resource names must be unique within a namespace, but can be duplicated across different namespaces. Namespace-based scoping applies only to namespaced objects (e.g., Notebooks, Model Services) and does not impact cluster-wide objects (e.g., Nodes, Storage Classes).",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/user_guide/advanced/namespace.md",sourceDirName:"user_guide/advanced",slug:"/user_guide/advanced/namespace",permalink:"/zh/docs/user_guide/advanced/namespace",draft:!1,unlisted:!1,editUrl:"https://github.com/llmos-ai/llmos.ai/tree/main/docs/docs/user_guide/advanced/namespace.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Namespace"},sidebar:"tutorialSidebar",previous:{title:"Advanced",permalink:"/zh/docs/category/advanced"},next:{title:"\u7cfb\u7edf\u7ec4\u4ef6",permalink:"/zh/docs/user_guide/advanced/managed_addon"}},r={},d=[{value:"System Namespaces",id:"system-namespaces",level:3},{value:"Public Namespace",id:"public-namespace",level:3}];function l(e){const s={admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"Namespaces provide a way to isolate groups of resources within a single cluster. Resource names must be unique within a namespace, but can be duplicated across different namespaces. Namespace-based scoping applies only to namespaced objects (e.g., Notebooks, Model Services) and does not impact cluster-wide objects (e.g., Nodes, Storage Classes)."}),"\n",(0,a.jsx)(s.admonition,{type:"note",children:(0,a.jsxs)(s.p,{children:["For production and isolated environments, avoid using the ",(0,a.jsx)(s.code,{children:"default"})," or ",(0,a.jsx)(s.code,{children:"llmos-public"})," namespaces. Instead, create and use custom namespaces tailored to your needs."]})}),"\n",(0,a.jsx)(s.h3,{id:"system-namespaces",children:"System Namespaces"}),"\n",(0,a.jsx)(s.p,{children:"LLMOS reserves specific namespaces for system components. These are not intended for end-user use:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"kube-system"}),": Reserved for Kubernetes system components."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"kube-node-lease"}),": Manages Kubernetes node leases."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"kube-public"}),": For publicly accessible Kubernetes resources."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"llmos-system"}),": Dedicated to LLMOS system components."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"storage-system"}),": Handles built-in system storage."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"system-upgrade"}),": Used for the system upgrade service."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"public-namespace",children:"Public Namespace"}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"llmos-public"})," namespace is a designated space for resources that are accessible to all end users. By default, all resources within this namespace are publicly available, with non-admin users having ",(0,a.jsx)(s.code,{children:"read-only"})," access."]}),"\n",(0,a.jsx)(s.p,{children:"If you need to offer a service to all users within your company or organization, this namespace is ideal for hosting such publicly accessible resources."})]})}function u(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>t});var a=n(6540);const c={},i=a.createContext(c);function o(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);